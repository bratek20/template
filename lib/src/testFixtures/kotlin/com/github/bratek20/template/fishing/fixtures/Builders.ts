// DO NOT EDIT! Autogenerated by HLA tool

namespace Fishing.Builder {
    export function fishId(value: string = "someValue"): FishId {
        return new FishId(value)
    }

    export interface CaughtFishDef {
        id?: string,
        name?: string,
        points?: number,
    }
    export function caughtFish(def?: CaughtFishDef): CaughtFish {
        const final_id = def?.id ?? "someValue"
        const final_name = def?.name ?? "someValue"
        const final_points = def?.points ?? 0

        return CaughtFish.create(
            new FishId(final_id),
            final_name,
            final_points,
        )
    }

    export interface LureDef {
        fishId?: string,
    }
    export function lure(def?: LureDef): Lure {
        const final_fishId = def?.fishId ?? "someValue"

        return Lure.create(
            new FishId(final_fishId),
        )
    }

    export interface FishContentDef {
        id?: string,
        name?: string,
        minPoints?: number,
        maxPoints?: number,
    }
    export function fishContent(def?: FishContentDef): FishContent {
        const final_id = def?.id ?? "someValue"
        const final_name = def?.name ?? "someValue"
        const final_minPoints = def?.minPoints ?? 0
        const final_maxPoints = def?.maxPoints ?? 0

        return FishContent.create(
            new FishId(final_id),
            final_name,
            final_minPoints,
            final_maxPoints,
        )
    }

    export interface FisheryDef {
        fishes?: FishContentDef[],
    }
    export function fishery(def?: FisheryDef): Fishery {
        const final_fishes = def?.fishes ?? []

        return Fishery.create(
            final_fishes.map(it => fishContent(it)),
        )
    }
}